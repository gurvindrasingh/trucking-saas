services:
  auth-service:
    container_name: auth-service-container
    build:
      context: ./services/auth-service
      dockerfile: ../../docker/services/auth-service/Dockerfile
    volumes:
      - ./services/auth-service:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${AUTH_HOST_PORT}:${AUTH_DOCKER_PORT}"
      - "${AUTH_HOST_DEBUG_PORT}:${AUTH_DOCKER_DEBUG_PORT}"
    env_file:
      - ./services/auth-service/.env
    depends_on:
      - auth-db
    command: sh -c "npm run debug"
    networks:
      - trucking-network

  auth-db:
    image: postgres:13-alpine
    container_name: auth-db-container
    restart: always
    ports:
      - "${PGDB_HOST_PORT}:${PGDB_DOCKER_PORT}"
    env_file:
      - ./services/auth-service/.env
    environment:
      POSTGRES_USER: ${PGDB_USER}
      POSTGRES_PASSWORD: ${PGDB_PASSWORD}
      POSTGRES_DB: ${PGDB_NAME}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - trucking-network

  db-adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_HOST_PORT}:${ADMINER_DOCKER_PORT}"
    networks:
      - trucking-network

networks:
  trucking-network:
    driver: bridge

volumes:
  auth-db-data:
