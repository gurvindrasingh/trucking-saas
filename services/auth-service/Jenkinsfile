pipeline {
    agent any

    environment {
        GHCR_CREDENTIALS = credentials('GHCR_PAT')
        KUBECONFIG_PATH = credentials('minikube-kubeconfig')
        IMAGE_NAME = "ghcr.io/gurvindrasingh/trucking-saas/auth-service"
        IMAGE_TAG = "${GIT_COMMIT}"
    }

    options {
        disableConcurrentBuilds()
        durabilityHint('MAX_SURVIVABILITY')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // stage('Pull Image from GHCR') {
        //     steps {
        //         script {
        //             echo "ðŸ”„ Pulling Docker image from GHCR..."
        //             sh "echo $GHCR_CREDENTIALS_PSW | docker login ghcr.io -u $GHCR_CREDENTIALS_USR --password-stdin"
        //             sh "docker pull ${IMAGE_NAME}:${IMAGE_TAG}"
        //         }
        //     }
        // }

        // stage('Deploy to Kubernetes') {
        //     steps {
        //         script {
        //             echo "ðŸš€ Deploying to Kubernetes..."
        //             withEnv(["KUBECONFIG=${KUBECONFIG_PATH}"]) {
        //                 sh "kubectl set image deployment/auth-service auth-service=${IMAGE_NAME}:${IMAGE_TAG} --namespace=default || kubectl apply -f infra/k8s/auth-service/deployment.yaml"
        //             }
        //         }
        //     }
        // }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo "ðŸš€ Deploying to Kubernetes..."
                    withEnv(["KUBECONFIG=${KUBECONFIG_PATH}"]) {
                        sh "kubectl apply -f infra/k8s/auth-service/deployment.yaml"
                    }
                }
            }
        }

    }

    post {
        always {
            echo 'ðŸ§¹ Cleaning up Docker...'
            sh 'docker system prune -f'
        }
    }
}
